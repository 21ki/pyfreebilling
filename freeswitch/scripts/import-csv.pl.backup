#!/usr/bin/perl -w

# PyFreeBilling


use strict;
use DBI();
use File::Copy;

# set variables
#my $pg_host = $ARGV[1]; 
#my $pg_db = $ARGV[2]; 
#my $pg_table = $ARGV[3]; 
#my $pg_user = $ARGV[4]; 
#my $pg_pwd = $ARGV[5];

#my $pg_host = localhost; 
#my $pg_db = pyfreebilling1;
my $pg_user = "importcdr";
my $pg_pwd = "comtep";

# this commands HUPS fs, she creates new cdr.csv files, so we can load the old ones up
my $command  = ("/usr/local/freeswitch/bin/fs_cli -x 'cdr_csv rotate'");
system($command) == 0 or die "$0: system cdr_csv rotate failed: $?";

# Connect to database 
print "Connecting to database...\n\n"; 

my $dsn="DBI:Pg:dbname=pyfreebilling1;host=localhost;port=5432";
my $dbh=DBI->connect($dsn,$pg_user,$pg_pwd)or die "$0: Couldn't connect to database: " . DBI->errstr;

# Copy Master.cv file
my $mode = 0777;
# this is the standard location of the cdr-csv
my @LS  = `ls -1t /tmp/cdr-csv/Master.csv.*`;
#my @LS  = `ls -1t /usr/local/freeswitch/log/cdr-csv/Master.csv.*`;
foreach my $line (@LS) {
    chop($line);
    chmod $mode, $line;
    my $stm     = "COPY cdr FROM '$line' WITH NULL AS '' DELIMITER ',' CSV;";
    my $ul      = $dbh->prepare($stm) or die "$0: Couldn't prepare statement $stm: " . $dbh->errstr;;
    $ul->execute();
    $ul->finish;
    system("cat $line >> /usr/local/freeswitch/log/cdr-csv/FULL_Master.csv"); # we do this to maintain a single FULL file if needed
    unlink $line;
}

exit 0;
