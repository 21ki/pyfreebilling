# -*- coding: utf-8 -*-
# Generated by Django 1.11.12 on 2018-04-30 16:52
from __future__ import unicode_literals

import django.contrib.postgres.fields.ranges
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields
import model_utils.fields
import partial_index


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('direction', '0003_auto_20180427_1914'),
    ]

    operations = [
        migrations.CreateModel(
            name='CallerNumList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=255)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from=b'name')),
                ('callerid_filter', models.CharField(choices=[(b'1', 'No filter'), (b'2', 'Prefix authorized'), (b'3', 'Prefix prohibited')], default=b'1', max_length=2, verbose_name='CallerID Prefix filter')),
                ('destination', models.ManyToManyField(to='direction.Destination')),
            ],
            options={
                'ordering': ('-name',),
                'db_table': 'rate_callernum_list',
            },
        ),
        migrations.CreateModel(
            name='CustomerCountryRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('r_rate', models.DecimalField(decimal_places=5, help_text='rate per minute', max_digits=11, verbose_name='sell rate')),
                ('r_block_min_duration', models.PositiveSmallIntegerField(default=1, verbose_name='Increment')),
                ('r_minimal_time', models.PositiveSmallIntegerField(default=0, help_text='minimal time to be billed in seconds', verbose_name='Minimal time')),
                ('r_init_block', models.DecimalField(decimal_places=5, default=0, max_digits=11, verbose_name='Connection fee')),
                ('status', models.CharField(choices=[(b'enabled', 'Enabled'), (b'enabled_negmargin', 'Enabled allowing negative margin'), (b'disabled', 'Disabled'), (b'blocked', 'Blocked')], default=b'enabled', help_text='State of the rate : enabled / blocked - calls to this destination are blocked / disabled', max_length=20, verbose_name='Status')),
                ('date_validity', django.contrib.postgres.fields.ranges.DateTimeRangeField()),
            ],
            options={
                'ordering': ('c_ratecard',),
                'db_table': 'rate_c_country_rate',
            },
        ),
        migrations.CreateModel(
            name='CustomerCountryTypeRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('r_rate', models.DecimalField(decimal_places=5, help_text='rate per minute', max_digits=11, verbose_name='sell rate')),
                ('r_block_min_duration', models.PositiveSmallIntegerField(default=1, verbose_name='Increment')),
                ('r_minimal_time', models.PositiveSmallIntegerField(default=0, help_text='minimal time to be billed in seconds', verbose_name='Minimal time')),
                ('r_init_block', models.DecimalField(decimal_places=5, default=0, max_digits=11, verbose_name='Connection fee')),
                ('status', models.CharField(choices=[(b'enabled', 'Enabled'), (b'enabled_negmargin', 'Enabled allowing negative margin'), (b'disabled', 'Disabled'), (b'blocked', 'Blocked')], default=b'enabled', help_text='State of the rate : enabled / blocked - calls to this destination are blocked / disabled', max_length=20, verbose_name='Status')),
                ('date_validity', django.contrib.postgres.fields.ranges.DateTimeRangeField()),
            ],
            options={
                'ordering': ('c_ratecard',),
                'db_table': 'rate_c_countrytype_rate',
            },
        ),
        migrations.CreateModel(
            name='CustomerDefaultRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('r_rate', models.DecimalField(decimal_places=5, help_text='rate per minute', max_digits=11, verbose_name='sell rate')),
                ('r_block_min_duration', models.PositiveSmallIntegerField(default=1, verbose_name='Increment')),
                ('r_minimal_time', models.PositiveSmallIntegerField(default=0, help_text='minimal time to be billed in seconds', verbose_name='Minimal time')),
                ('r_init_block', models.DecimalField(decimal_places=5, default=0, max_digits=11, verbose_name='Connection fee')),
                ('status', models.CharField(choices=[(b'enabled', 'Enabled'), (b'enabled_negmargin', 'Enabled allowing negative margin'), (b'disabled', 'Disabled'), (b'blocked', 'Blocked')], default=b'enabled', help_text='State of the rate : enabled / blocked - calls to this destination are blocked / disabled', max_length=20, verbose_name='Status')),
                ('date_validity', django.contrib.postgres.fields.ranges.DateTimeRangeField()),
            ],
            options={
                'ordering': ('c_ratecard',),
                'db_table': 'rate_c_default_rate',
            },
        ),
        migrations.CreateModel(
            name='CustomerDestinationRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('r_rate', models.DecimalField(decimal_places=5, help_text='rate per minute', max_digits=11, verbose_name='sell rate')),
                ('r_block_min_duration', models.PositiveSmallIntegerField(default=1, verbose_name='Increment')),
                ('r_minimal_time', models.PositiveSmallIntegerField(default=0, help_text='minimal time to be billed in seconds', verbose_name='Minimal time')),
                ('r_init_block', models.DecimalField(decimal_places=5, default=0, max_digits=11, verbose_name='Connection fee')),
                ('status', models.CharField(choices=[(b'enabled', 'Enabled'), (b'enabled_negmargin', 'Enabled allowing negative margin'), (b'disabled', 'Disabled'), (b'blocked', 'Blocked')], default=b'enabled', help_text='State of the rate : enabled / blocked - calls to this destination are blocked / disabled', max_length=20, verbose_name='Status')),
                ('date_validity', django.contrib.postgres.fields.ranges.DateTimeRangeField()),
            ],
            options={
                'ordering': ('c_ratecard',),
                'db_table': 'rate_c_destination_rate',
            },
        ),
        migrations.CreateModel(
            name='CustomerPrefixRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('r_rate', models.DecimalField(decimal_places=5, help_text='rate per minute', max_digits=11, verbose_name='sell rate')),
                ('r_block_min_duration', models.PositiveSmallIntegerField(default=1, verbose_name='Increment')),
                ('r_minimal_time', models.PositiveSmallIntegerField(default=0, help_text='minimal time to be billed in seconds', verbose_name='Minimal time')),
                ('r_init_block', models.DecimalField(decimal_places=5, default=0, max_digits=11, verbose_name='Connection fee')),
                ('status', models.CharField(choices=[(b'enabled', 'Enabled'), (b'enabled_negmargin', 'Enabled allowing negative margin'), (b'disabled', 'Disabled'), (b'blocked', 'Blocked')], default=b'enabled', help_text='State of the rate : enabled / blocked - calls to this destination are blocked / disabled', max_length=20, verbose_name='Status')),
                ('date_validity', django.contrib.postgres.fields.ranges.DateTimeRangeField()),
                ('prefix', models.CharField(db_index=True, max_length=30, verbose_name='numeric prefix')),
                ('destnum_length', models.PositiveSmallIntegerField(default=0, help_text='If value > 0, then destination number must match tsi length', verbose_name='Destination number length')),
            ],
            options={
                'ordering': ('c_ratecard',),
                'db_table': 'rate_c_prefix_rate',
            },
        ),
        migrations.CreateModel(
            name='CustomerRatecard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', model_utils.fields.StatusField(choices=[(b'enabled', 'Enabled'), (b'disabled', 'Disabled')], default=b'enabled', max_length=100, no_check_for_status=True, verbose_name='status')),
                ('status_changed', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='status', verbose_name='status changed')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('date_validity', django.contrib.postgres.fields.ranges.DateTimeRangeField()),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='name')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from=b'name')),
                ('rc_type', models.CharField(choices=[(b'pstn', 'Outbound calls'), (b'did', 'DID - Inbound calls'), (b'pstn2did', 'Outbound calls to internal DID'), (b'emergency', 'Emergency calls')], default=b'pstn', help_text='Select the right ratecard regarding the type of calls. Default is PSTN', max_length=10, verbose_name='Type of ratecards')),
                ('callerid_list', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rate.CallerNumList')),
            ],
            options={
                'ordering': ('name',),
                'db_table': 'rate_c_ratecard',
            },
        ),
        migrations.CreateModel(
            name='CustomerRegionRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('r_rate', models.DecimalField(decimal_places=5, help_text='rate per minute', max_digits=11, verbose_name='sell rate')),
                ('r_block_min_duration', models.PositiveSmallIntegerField(default=1, verbose_name='Increment')),
                ('r_minimal_time', models.PositiveSmallIntegerField(default=0, help_text='minimal time to be billed in seconds', verbose_name='Minimal time')),
                ('r_init_block', models.DecimalField(decimal_places=5, default=0, max_digits=11, verbose_name='Connection fee')),
                ('status', models.CharField(choices=[(b'enabled', 'Enabled'), (b'enabled_negmargin', 'Enabled allowing negative margin'), (b'disabled', 'Disabled'), (b'blocked', 'Blocked')], default=b'enabled', help_text='State of the rate : enabled / blocked - calls to this destination are blocked / disabled', max_length=20, verbose_name='Status')),
                ('date_validity', django.contrib.postgres.fields.ranges.DateTimeRangeField()),
                ('c_ratecard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rate.CustomerRatecard')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='direction.Region')),
            ],
            options={
                'ordering': ('c_ratecard',),
                'db_table': 'rate_c_region_rate',
            },
        ),
        migrations.CreateModel(
            name='CustomerRegionTypeRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('r_rate', models.DecimalField(decimal_places=5, help_text='rate per minute', max_digits=11, verbose_name='sell rate')),
                ('r_block_min_duration', models.PositiveSmallIntegerField(default=1, verbose_name='Increment')),
                ('r_minimal_time', models.PositiveSmallIntegerField(default=0, help_text='minimal time to be billed in seconds', verbose_name='Minimal time')),
                ('r_init_block', models.DecimalField(decimal_places=5, default=0, max_digits=11, verbose_name='Connection fee')),
                ('status', models.CharField(choices=[(b'enabled', 'Enabled'), (b'enabled_negmargin', 'Enabled allowing negative margin'), (b'disabled', 'Disabled'), (b'blocked', 'Blocked')], default=b'enabled', help_text='State of the rate : enabled / blocked - calls to this destination are blocked / disabled', max_length=20, verbose_name='Status')),
                ('date_validity', django.contrib.postgres.fields.ranges.DateTimeRangeField()),
                ('c_ratecard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rate.CustomerRatecard')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='direction.Region')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='direction.Type')),
            ],
            options={
                'ordering': ('c_ratecard',),
                'db_table': 'rate_c_regiontype_rate',
            },
        ),
        migrations.CreateModel(
            name='ProviderCountryRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('r_rate', models.DecimalField(decimal_places=5, help_text='rate per minute', max_digits=11, verbose_name='sell rate')),
                ('r_block_min_duration', models.PositiveSmallIntegerField(default=1, verbose_name='Increment')),
                ('r_minimal_time', models.PositiveSmallIntegerField(default=0, help_text='minimal time to be billed in seconds', verbose_name='Minimal time')),
                ('r_init_block', models.DecimalField(decimal_places=5, default=0, max_digits=11, verbose_name='Connection fee')),
                ('status', models.CharField(choices=[(b'enabled', 'Enabled'), (b'enabled_negmargin', 'Enabled allowing negative margin'), (b'disabled', 'Disabled'), (b'blocked', 'Blocked')], default=b'enabled', help_text='State of the rate : enabled / blocked - calls to this destination are blocked / disabled', max_length=20, verbose_name='Status')),
                ('date_validity', django.contrib.postgres.fields.ranges.DateTimeRangeField()),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='direction.Country')),
            ],
            options={
                'ordering': ('p_ratecard',),
                'db_table': 'rate_p_country_rate',
            },
        ),
        migrations.CreateModel(
            name='ProviderCountryTypeRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('r_rate', models.DecimalField(decimal_places=5, help_text='rate per minute', max_digits=11, verbose_name='sell rate')),
                ('r_block_min_duration', models.PositiveSmallIntegerField(default=1, verbose_name='Increment')),
                ('r_minimal_time', models.PositiveSmallIntegerField(default=0, help_text='minimal time to be billed in seconds', verbose_name='Minimal time')),
                ('r_init_block', models.DecimalField(decimal_places=5, default=0, max_digits=11, verbose_name='Connection fee')),
                ('status', models.CharField(choices=[(b'enabled', 'Enabled'), (b'enabled_negmargin', 'Enabled allowing negative margin'), (b'disabled', 'Disabled'), (b'blocked', 'Blocked')], default=b'enabled', help_text='State of the rate : enabled / blocked - calls to this destination are blocked / disabled', max_length=20, verbose_name='Status')),
                ('date_validity', django.contrib.postgres.fields.ranges.DateTimeRangeField()),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='direction.Country')),
            ],
            options={
                'ordering': ('p_ratecard',),
                'db_table': 'rate_p_countrytype_rate',
            },
        ),
        migrations.CreateModel(
            name='ProviderDefaultRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('r_rate', models.DecimalField(decimal_places=5, help_text='rate per minute', max_digits=11, verbose_name='sell rate')),
                ('r_block_min_duration', models.PositiveSmallIntegerField(default=1, verbose_name='Increment')),
                ('r_minimal_time', models.PositiveSmallIntegerField(default=0, help_text='minimal time to be billed in seconds', verbose_name='Minimal time')),
                ('r_init_block', models.DecimalField(decimal_places=5, default=0, max_digits=11, verbose_name='Connection fee')),
                ('status', models.CharField(choices=[(b'enabled', 'Enabled'), (b'enabled_negmargin', 'Enabled allowing negative margin'), (b'disabled', 'Disabled'), (b'blocked', 'Blocked')], default=b'enabled', help_text='State of the rate : enabled / blocked - calls to this destination are blocked / disabled', max_length=20, verbose_name='Status')),
                ('date_validity', django.contrib.postgres.fields.ranges.DateTimeRangeField()),
            ],
            options={
                'ordering': ('p_ratecard',),
                'db_table': 'rate_p_default_rate',
            },
        ),
        migrations.CreateModel(
            name='ProviderDestinationRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('r_rate', models.DecimalField(decimal_places=5, help_text='rate per minute', max_digits=11, verbose_name='sell rate')),
                ('r_block_min_duration', models.PositiveSmallIntegerField(default=1, verbose_name='Increment')),
                ('r_minimal_time', models.PositiveSmallIntegerField(default=0, help_text='minimal time to be billed in seconds', verbose_name='Minimal time')),
                ('r_init_block', models.DecimalField(decimal_places=5, default=0, max_digits=11, verbose_name='Connection fee')),
                ('status', models.CharField(choices=[(b'enabled', 'Enabled'), (b'enabled_negmargin', 'Enabled allowing negative margin'), (b'disabled', 'Disabled'), (b'blocked', 'Blocked')], default=b'enabled', help_text='State of the rate : enabled / blocked - calls to this destination are blocked / disabled', max_length=20, verbose_name='Status')),
                ('date_validity', django.contrib.postgres.fields.ranges.DateTimeRangeField()),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='direction.Destination')),
            ],
            options={
                'ordering': ('p_ratecard',),
                'db_table': 'rate_p_destination_rate',
            },
        ),
        migrations.CreateModel(
            name='ProviderPrefixRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('r_rate', models.DecimalField(decimal_places=5, help_text='rate per minute', max_digits=11, verbose_name='sell rate')),
                ('r_block_min_duration', models.PositiveSmallIntegerField(default=1, verbose_name='Increment')),
                ('r_minimal_time', models.PositiveSmallIntegerField(default=0, help_text='minimal time to be billed in seconds', verbose_name='Minimal time')),
                ('r_init_block', models.DecimalField(decimal_places=5, default=0, max_digits=11, verbose_name='Connection fee')),
                ('status', models.CharField(choices=[(b'enabled', 'Enabled'), (b'enabled_negmargin', 'Enabled allowing negative margin'), (b'disabled', 'Disabled'), (b'blocked', 'Blocked')], default=b'enabled', help_text='State of the rate : enabled / blocked - calls to this destination are blocked / disabled', max_length=20, verbose_name='Status')),
                ('date_validity', django.contrib.postgres.fields.ranges.DateTimeRangeField()),
                ('prefix', models.CharField(db_index=True, max_length=30, verbose_name='numeric prefix')),
                ('destnum_length', models.PositiveSmallIntegerField(default=0, help_text='If value > 0, then destination number must match tsi length', verbose_name='Destination number length')),
            ],
            options={
                'ordering': ('p_ratecard',),
                'db_table': 'rate_p_prefix_rate',
            },
        ),
        migrations.CreateModel(
            name='ProviderRatecard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', model_utils.fields.StatusField(choices=[(b'enabled', 'Enabled'), (b'disabled', 'Disabled')], default=b'enabled', max_length=100, no_check_for_status=True, verbose_name='status')),
                ('status_changed', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='status', verbose_name='status changed')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('date_validity', django.contrib.postgres.fields.ranges.DateTimeRangeField()),
                ('name', models.CharField(max_length=128, unique=True)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from=b'name')),
                ('rc_type', models.CharField(choices=[(b'pstn', 'Outbound calls'), (b'did', 'DID - Inbound calls'), (b'pstn2did', 'Outbound calls to internal DID'), (b'emergency', 'Emergency calls')], default=b'pstn', help_text='Select the right ratecard regarding the type of calls. Default is PSTN', max_length=10, verbose_name='Type of ratecards')),
                ('provider_prefix', models.CharField(max_length=10)),
                ('estimated_quality', models.PositiveSmallIntegerField(default=b'10', help_text='Estimated quality. Number between 0 to 10', validators=[django.core.validators.MaxValueValidator(10)], verbose_name='quality')),
                ('callerid_list', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rate.CallerNumList')),
            ],
            options={
                'ordering': ('name',),
                'db_table': 'rate_p_ratecard',
            },
        ),
        migrations.CreateModel(
            name='ProviderRegionRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('r_rate', models.DecimalField(decimal_places=5, help_text='rate per minute', max_digits=11, verbose_name='sell rate')),
                ('r_block_min_duration', models.PositiveSmallIntegerField(default=1, verbose_name='Increment')),
                ('r_minimal_time', models.PositiveSmallIntegerField(default=0, help_text='minimal time to be billed in seconds', verbose_name='Minimal time')),
                ('r_init_block', models.DecimalField(decimal_places=5, default=0, max_digits=11, verbose_name='Connection fee')),
                ('status', models.CharField(choices=[(b'enabled', 'Enabled'), (b'enabled_negmargin', 'Enabled allowing negative margin'), (b'disabled', 'Disabled'), (b'blocked', 'Blocked')], default=b'enabled', help_text='State of the rate : enabled / blocked - calls to this destination are blocked / disabled', max_length=20, verbose_name='Status')),
                ('date_validity', django.contrib.postgres.fields.ranges.DateTimeRangeField()),
                ('p_ratecard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rate.ProviderRatecard')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='direction.Region')),
            ],
            options={
                'ordering': ('p_ratecard',),
                'db_table': 'rate_p_region_rate',
            },
        ),
        migrations.CreateModel(
            name='ProviderRegionTypeRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('r_rate', models.DecimalField(decimal_places=5, help_text='rate per minute', max_digits=11, verbose_name='sell rate')),
                ('r_block_min_duration', models.PositiveSmallIntegerField(default=1, verbose_name='Increment')),
                ('r_minimal_time', models.PositiveSmallIntegerField(default=0, help_text='minimal time to be billed in seconds', verbose_name='Minimal time')),
                ('r_init_block', models.DecimalField(decimal_places=5, default=0, max_digits=11, verbose_name='Connection fee')),
                ('status', models.CharField(choices=[(b'enabled', 'Enabled'), (b'enabled_negmargin', 'Enabled allowing negative margin'), (b'disabled', 'Disabled'), (b'blocked', 'Blocked')], default=b'enabled', help_text='State of the rate : enabled / blocked - calls to this destination are blocked / disabled', max_length=20, verbose_name='Status')),
                ('date_validity', django.contrib.postgres.fields.ranges.DateTimeRangeField()),
                ('p_ratecard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rate.ProviderRatecard')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='direction.Region')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='direction.Type')),
            ],
            options={
                'ordering': ('p_ratecard',),
                'db_table': 'rate_p_regiontype_rate',
            },
        ),
        migrations.AddField(
            model_name='providerprefixrate',
            name='p_ratecard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rate.ProviderRatecard'),
        ),
        migrations.AddField(
            model_name='providerdestinationrate',
            name='p_ratecard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rate.ProviderRatecard'),
        ),
        migrations.AddField(
            model_name='providerdefaultrate',
            name='p_ratecard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rate.ProviderRatecard'),
        ),
        migrations.AddField(
            model_name='providercountrytyperate',
            name='p_ratecard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rate.ProviderRatecard'),
        ),
        migrations.AddField(
            model_name='providercountrytyperate',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='direction.Type'),
        ),
        migrations.AddField(
            model_name='providercountryrate',
            name='p_ratecard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rate.ProviderRatecard'),
        ),
        migrations.AddField(
            model_name='customerprefixrate',
            name='c_ratecard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rate.CustomerRatecard'),
        ),
        migrations.AddField(
            model_name='customerdestinationrate',
            name='c_ratecard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rate.CustomerRatecard'),
        ),
        migrations.AddField(
            model_name='customerdestinationrate',
            name='destination',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='direction.Destination'),
        ),
        migrations.AddField(
            model_name='customerdefaultrate',
            name='c_ratecard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rate.CustomerRatecard'),
        ),
        migrations.AddField(
            model_name='customercountrytyperate',
            name='c_ratecard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rate.CustomerRatecard'),
        ),
        migrations.AddField(
            model_name='customercountrytyperate',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='direction.Country'),
        ),
        migrations.AddField(
            model_name='customercountrytyperate',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='direction.Type'),
        ),
        migrations.AddField(
            model_name='customercountryrate',
            name='c_ratecard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rate.CustomerRatecard'),
        ),
        migrations.AddField(
            model_name='customercountryrate',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='direction.Country'),
        ),
        migrations.AddIndex(
            model_name='providerregiontyperate',
            index=partial_index.PartialIndex(fields=[b'p_ratecard', b'region', b'type'], name='rate_p_regi_p_ratec_8e056e_partial', unique=True, where=b"status <> 'disabled'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AlterUniqueTogether(
            name='providerregiontyperate',
            unique_together=set([('p_ratecard', 'region', 'type')]),
        ),
        migrations.AddIndex(
            model_name='providerregionrate',
            index=partial_index.PartialIndex(fields=[b'p_ratecard', b'region'], name='rate_p_regi_p_ratec_3494e7_partial', unique=True, where=b"status <> 'disabled'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AlterUniqueTogether(
            name='providerregionrate',
            unique_together=set([('p_ratecard', 'region')]),
        ),
        migrations.AddIndex(
            model_name='providerratecard',
            index=partial_index.PartialIndex(fields=[b'id', b'rc_type'], name='rate_p_rate_id_6d49c4_partial', unique=False, where=b'', where_postgresql=b"status = 'enabled'", where_sqlite=b''),
        ),
        migrations.AddIndex(
            model_name='providerratecard',
            index=partial_index.PartialIndex(fields=[b'id', b'rc_type'], name='rate_p_rate_id_d240fb_partial', unique=False, where=b"status = 'enabled' AND rc_type = 'PSTN'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AddIndex(
            model_name='providerratecard',
            index=partial_index.PartialIndex(fields=[b'id', b'rc_type'], name='rate_p_rate_id_39e87b_partial', unique=False, where=b"status = 'enabled' AND rc_type = 'DIDIN'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AddIndex(
            model_name='providerratecard',
            index=partial_index.PartialIndex(fields=[b'id', b'rc_type'], name='rate_p_rate_id_f7ea6f_partial', unique=False, where=b"status = 'enabled' AND rc_type = 'DIDOUT'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AddIndex(
            model_name='providerratecard',
            index=partial_index.PartialIndex(fields=[b'id', b'rc_type'], name='rate_p_rate_id_ca6a21_partial', unique=False, where=b"status = 'enabled' AND rc_type = 'EMERGENCY'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AddIndex(
            model_name='providerprefixrate',
            index=partial_index.PartialIndex(fields=[b'p_ratecard', b'prefix', b'destnum_length'], name='rate_p_pref_p_ratec_908aea_partial', unique=True, where=b"status <> 'disabled'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AlterUniqueTogether(
            name='providerprefixrate',
            unique_together=set([('p_ratecard', 'prefix', 'destnum_length')]),
        ),
        migrations.AddIndex(
            model_name='providerdestinationrate',
            index=partial_index.PartialIndex(fields=[b'p_ratecard', b'destination'], name='rate_p_dest_p_ratec_fa6161_partial', unique=True, where=b"status <> 'disabled'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AlterUniqueTogether(
            name='providerdestinationrate',
            unique_together=set([('p_ratecard', 'destination')]),
        ),
        migrations.AddIndex(
            model_name='providerdefaultrate',
            index=models.Index(fields=[b'p_ratecard'], name='rate_p_defa_p_ratec_e5fb7b_idx'),
        ),
        migrations.AddIndex(
            model_name='providerdefaultrate',
            index=partial_index.PartialIndex(fields=[b'p_ratecard'], name='rate_p_defa_p_ratec_7eb93f_partial', unique=True, where=b"status <> 'disabled'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AddIndex(
            model_name='providercountrytyperate',
            index=partial_index.PartialIndex(fields=[b'p_ratecard', b'country', b'type'], name='rate_p_coun_p_ratec_8bb0e7_partial', unique=True, where=b"status <> 'disabled'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AlterUniqueTogether(
            name='providercountrytyperate',
            unique_together=set([('p_ratecard', 'country', 'type')]),
        ),
        migrations.AddIndex(
            model_name='providercountryrate',
            index=partial_index.PartialIndex(fields=[b'p_ratecard', b'country'], name='rate_p_coun_p_ratec_8668f0_partial', unique=True, where=b"status <> 'disabled'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AlterUniqueTogether(
            name='providercountryrate',
            unique_together=set([('p_ratecard', 'country')]),
        ),
        migrations.AddIndex(
            model_name='customerregiontyperate',
            index=partial_index.PartialIndex(fields=[b'c_ratecard', b'region', b'type'], name='rate_c_regi_c_ratec_4164e9_partial', unique=True, where=b"status <> 'disabled'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AlterUniqueTogether(
            name='customerregiontyperate',
            unique_together=set([('c_ratecard', 'region', 'type')]),
        ),
        migrations.AddIndex(
            model_name='customerregionrate',
            index=partial_index.PartialIndex(fields=[b'c_ratecard', b'region'], name='rate_c_regi_c_ratec_895c43_partial', unique=True, where=b"status <> 'disabled'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AlterUniqueTogether(
            name='customerregionrate',
            unique_together=set([('c_ratecard', 'region')]),
        ),
        migrations.AddIndex(
            model_name='customerratecard',
            index=partial_index.PartialIndex(fields=[b'id', b'rc_type'], name='rate_c_rate_id_88abed_partial', unique=False, where=b'', where_postgresql=b"status = 'enabled'", where_sqlite=b''),
        ),
        migrations.AddIndex(
            model_name='customerratecard',
            index=partial_index.PartialIndex(fields=[b'id', b'rc_type'], name='rate_c_rate_id_2250d3_partial', unique=False, where=b"status = 'enabled' AND rc_type = 'PSTN'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AddIndex(
            model_name='customerratecard',
            index=partial_index.PartialIndex(fields=[b'id', b'rc_type'], name='rate_c_rate_id_e0828b_partial', unique=False, where=b"status = 'enabled' AND rc_type = 'DIDIN'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AddIndex(
            model_name='customerratecard',
            index=partial_index.PartialIndex(fields=[b'id', b'rc_type'], name='rate_c_rate_id_d7cc5c_partial', unique=False, where=b"status = 'enabled' AND rc_type = 'DIDOUT'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AddIndex(
            model_name='customerratecard',
            index=partial_index.PartialIndex(fields=[b'id', b'rc_type'], name='rate_c_rate_id_a5b1ad_partial', unique=False, where=b"status = 'enabled' AND rc_type = 'EMERGENCY'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AddIndex(
            model_name='customerprefixrate',
            index=partial_index.PartialIndex(fields=[b'c_ratecard', b'prefix', b'destnum_length'], name='rate_c_pref_c_ratec_8e908a_partial', unique=True, where=b"status <> 'disabled'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AlterUniqueTogether(
            name='customerprefixrate',
            unique_together=set([('c_ratecard', 'prefix', 'destnum_length')]),
        ),
        migrations.AddIndex(
            model_name='customerdestinationrate',
            index=partial_index.PartialIndex(fields=[b'c_ratecard', b'destination'], name='rate_c_dest_c_ratec_aeab10_partial', unique=True, where=b"status <> 'disabled'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AlterUniqueTogether(
            name='customerdestinationrate',
            unique_together=set([('c_ratecard', 'destination')]),
        ),
        migrations.AddIndex(
            model_name='customerdefaultrate',
            index=models.Index(fields=[b'c_ratecard'], name='rate_c_defa_c_ratec_12fc63_idx'),
        ),
        migrations.AddIndex(
            model_name='customerdefaultrate',
            index=partial_index.PartialIndex(fields=[b'c_ratecard'], name='rate_c_defa_c_ratec_dc80d8_partial', unique=True, where=b"status <> 'disabled'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AddIndex(
            model_name='customercountrytyperate',
            index=partial_index.PartialIndex(fields=[b'c_ratecard', b'country', b'type'], name='rate_c_coun_c_ratec_2a41b1_partial', unique=True, where=b"status <> 'disabled'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AlterUniqueTogether(
            name='customercountrytyperate',
            unique_together=set([('c_ratecard', 'country', 'type')]),
        ),
        migrations.AddIndex(
            model_name='customercountryrate',
            index=partial_index.PartialIndex(fields=[b'c_ratecard', b'country'], name='rate_c_coun_c_ratec_b5c351_partial', unique=True, where=b"status <> 'disabled'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AlterUniqueTogether(
            name='customercountryrate',
            unique_together=set([('c_ratecard', 'country')]),
        ),
    ]
