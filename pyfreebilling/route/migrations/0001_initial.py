# -*- coding: utf-8 -*-
# Generated by Django 1.11.12 on 2018-05-04 15:40
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields
import model_utils.fields
import partial_index


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('pyfreebill', '0021_auto_20180406_1731'),
        ('direction', '0005_destination_country_iso2'),
        ('rate', '0004_auto_20180501_1311'),
    ]

    operations = [
        migrations.CreateModel(
            name='CountryRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', models.CharField(choices=[(b'enabled', 'Enabled'), (b'disabled', 'Disabled'), (b'blocked', 'Blocked')], default=b'enabled', help_text='State of the rate : enabled / blocked - calls to this destination are blocked / disabled', max_length=20, verbose_name='Status')),
                ('route_type', models.CharField(choices=[(b'LCR', 'Least cost'), (b'PRIO', 'Priority'), (b'WEIGHT', 'Weight'), (b'QUALITY', 'Quality')], default=b'LCR', max_length=10, verbose_name='route type')),
                ('weight', models.PositiveIntegerField()),
                ('priority', models.PositiveIntegerField()),
            ],
            options={
                'ordering': ('country',),
                'db_table': 'route_countryrule',
            },
        ),
        migrations.CreateModel(
            name='CountryTypeRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', models.CharField(choices=[(b'enabled', 'Enabled'), (b'disabled', 'Disabled'), (b'blocked', 'Blocked')], default=b'enabled', help_text='State of the rate : enabled / blocked - calls to this destination are blocked / disabled', max_length=20, verbose_name='Status')),
                ('route_type', models.CharField(choices=[(b'LCR', 'Least cost'), (b'PRIO', 'Priority'), (b'WEIGHT', 'Weight'), (b'QUALITY', 'Quality')], default=b'LCR', max_length=10, verbose_name='route type')),
                ('weight', models.PositiveIntegerField()),
                ('priority', models.PositiveIntegerField()),
            ],
            options={
                'ordering': ('country', 'type'),
                'db_table': 'route_countrytype_rule',
            },
        ),
        migrations.CreateModel(
            name='DefaultRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', models.CharField(choices=[(b'enabled', 'Enabled'), (b'disabled', 'Disabled'), (b'blocked', 'Blocked')], default=b'enabled', help_text='State of the rate : enabled / blocked - calls to this destination are blocked / disabled', max_length=20, verbose_name='Status')),
                ('route_type', models.CharField(choices=[(b'LCR', 'Least cost'), (b'PRIO', 'Priority'), (b'WEIGHT', 'Weight'), (b'QUALITY', 'Quality')], default=b'LCR', max_length=10, verbose_name='route type')),
                ('weight', models.PositiveIntegerField()),
                ('priority', models.PositiveIntegerField()),
            ],
            options={
                'ordering': ('-pk',),
                'db_table': 'route_default_rule',
            },
        ),
        migrations.CreateModel(
            name='DestinationRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', models.CharField(choices=[(b'enabled', 'Enabled'), (b'disabled', 'Disabled'), (b'blocked', 'Blocked')], default=b'enabled', help_text='State of the rate : enabled / blocked - calls to this destination are blocked / disabled', max_length=20, verbose_name='Status')),
                ('route_type', models.CharField(choices=[(b'LCR', 'Least cost'), (b'PRIO', 'Priority'), (b'WEIGHT', 'Weight'), (b'QUALITY', 'Quality')], default=b'LCR', max_length=10, verbose_name='route type')),
                ('weight', models.PositiveIntegerField()),
                ('priority', models.PositiveIntegerField()),
            ],
            options={
                'ordering': ('destination',),
                'db_table': 'route_destination_rule',
            },
        ),
        migrations.CreateModel(
            name='PrefixRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', models.CharField(choices=[(b'enabled', 'Enabled'), (b'disabled', 'Disabled'), (b'blocked', 'Blocked')], default=b'enabled', help_text='State of the rate : enabled / blocked - calls to this destination are blocked / disabled', max_length=20, verbose_name='Status')),
                ('route_type', models.CharField(choices=[(b'LCR', 'Least cost'), (b'PRIO', 'Priority'), (b'WEIGHT', 'Weight'), (b'QUALITY', 'Quality')], default=b'LCR', max_length=10, verbose_name='route type')),
                ('weight', models.PositiveIntegerField()),
                ('priority', models.PositiveIntegerField()),
                ('prefix', models.CharField(db_index=True, max_length=30, verbose_name='numeric prefix')),
                ('destnum_length', models.PositiveSmallIntegerField(default=0, help_text='If value > 0, then destination number must match tsi length', verbose_name='Destination number length')),
            ],
            options={
                'ordering': ('prefix', '-destnum_length'),
                'db_table': 'route_prefix_rule',
            },
        ),
        migrations.CreateModel(
            name='RegionRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', models.CharField(choices=[(b'enabled', 'Enabled'), (b'disabled', 'Disabled'), (b'blocked', 'Blocked')], default=b'enabled', help_text='State of the rate : enabled / blocked - calls to this destination are blocked / disabled', max_length=20, verbose_name='Status')),
                ('route_type', models.CharField(choices=[(b'LCR', 'Least cost'), (b'PRIO', 'Priority'), (b'WEIGHT', 'Weight'), (b'QUALITY', 'Quality')], default=b'LCR', max_length=10, verbose_name='route type')),
                ('weight', models.PositiveIntegerField()),
                ('priority', models.PositiveIntegerField()),
            ],
            options={
                'ordering': ('region',),
                'db_table': 'route_region_rule',
            },
        ),
        migrations.CreateModel(
            name='RegionTypeRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', models.CharField(choices=[(b'enabled', 'Enabled'), (b'disabled', 'Disabled'), (b'blocked', 'Blocked')], default=b'enabled', help_text='State of the rate : enabled / blocked - calls to this destination are blocked / disabled', max_length=20, verbose_name='Status')),
                ('route_type', models.CharField(choices=[(b'LCR', 'Least cost'), (b'PRIO', 'Priority'), (b'WEIGHT', 'Weight'), (b'QUALITY', 'Quality')], default=b'LCR', max_length=10, verbose_name='route type')),
                ('weight', models.PositiveIntegerField()),
                ('priority', models.PositiveIntegerField()),
            ],
            options={
                'ordering': ('region', 'type'),
                'db_table': 'route_regiontype_rule',
            },
        ),
        migrations.CreateModel(
            name='RoutingGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', model_utils.fields.StatusField(choices=[(b'enabled', 'Enabled'), (b'disabled', 'Disabled')], default=b'enabled', max_length=100, no_check_for_status=True, verbose_name='status')),
                ('status_changed', model_utils.fields.MonitorField(default=django.utils.timezone.now, monitor='status', verbose_name='status changed')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from=b'name')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='description')),
            ],
            options={
                'ordering': ('name',),
                'db_table': 'route_routinggroup',
            },
        ),
        migrations.AddField(
            model_name='regiontyperule',
            name='c_route',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='route.RoutingGroup'),
        ),
        migrations.AddField(
            model_name='regiontyperule',
            name='provider_gateway_list',
            field=models.ManyToManyField(to='pyfreebill.SofiaGateway'),
        ),
        migrations.AddField(
            model_name='regiontyperule',
            name='provider_ratecard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rate.ProviderRatecard'),
        ),
        migrations.AddField(
            model_name='regiontyperule',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='direction.Region'),
        ),
        migrations.AddField(
            model_name='regiontyperule',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='direction.Type'),
        ),
        migrations.AddField(
            model_name='regionrule',
            name='c_route',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='route.RoutingGroup'),
        ),
        migrations.AddField(
            model_name='regionrule',
            name='provider_gateway_list',
            field=models.ManyToManyField(to='pyfreebill.SofiaGateway'),
        ),
        migrations.AddField(
            model_name='regionrule',
            name='provider_ratecard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rate.ProviderRatecard'),
        ),
        migrations.AddField(
            model_name='regionrule',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='direction.Region'),
        ),
        migrations.AddField(
            model_name='prefixrule',
            name='c_route',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='route.RoutingGroup'),
        ),
        migrations.AddField(
            model_name='prefixrule',
            name='provider_gateway_list',
            field=models.ManyToManyField(to='pyfreebill.SofiaGateway'),
        ),
        migrations.AddField(
            model_name='prefixrule',
            name='provider_ratecard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rate.ProviderRatecard'),
        ),
        migrations.AddField(
            model_name='destinationrule',
            name='c_route',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='route.RoutingGroup'),
        ),
        migrations.AddField(
            model_name='destinationrule',
            name='destination',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='direction.Destination'),
        ),
        migrations.AddField(
            model_name='destinationrule',
            name='provider_gateway_list',
            field=models.ManyToManyField(to='pyfreebill.SofiaGateway'),
        ),
        migrations.AddField(
            model_name='destinationrule',
            name='provider_ratecard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rate.ProviderRatecard'),
        ),
        migrations.AddField(
            model_name='defaultrule',
            name='c_route',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='route.RoutingGroup'),
        ),
        migrations.AddField(
            model_name='defaultrule',
            name='provider_gateway_list',
            field=models.ManyToManyField(to='pyfreebill.SofiaGateway'),
        ),
        migrations.AddField(
            model_name='defaultrule',
            name='provider_ratecard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rate.ProviderRatecard'),
        ),
        migrations.AddField(
            model_name='countrytyperule',
            name='c_route',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='route.RoutingGroup'),
        ),
        migrations.AddField(
            model_name='countrytyperule',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='direction.Country'),
        ),
        migrations.AddField(
            model_name='countrytyperule',
            name='provider_gateway_list',
            field=models.ManyToManyField(to='pyfreebill.SofiaGateway'),
        ),
        migrations.AddField(
            model_name='countrytyperule',
            name='provider_ratecard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rate.ProviderRatecard'),
        ),
        migrations.AddField(
            model_name='countrytyperule',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='direction.Type'),
        ),
        migrations.AddField(
            model_name='countryrule',
            name='c_route',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='route.RoutingGroup'),
        ),
        migrations.AddField(
            model_name='countryrule',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='direction.Country'),
        ),
        migrations.AddField(
            model_name='countryrule',
            name='provider_gateway_list',
            field=models.ManyToManyField(to='pyfreebill.SofiaGateway'),
        ),
        migrations.AddField(
            model_name='countryrule',
            name='provider_ratecard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rate.ProviderRatecard'),
        ),
        migrations.AddIndex(
            model_name='regiontyperule',
            index=partial_index.PartialIndex(fields=[b'c_route', b'region', b'type', b'provider_ratecard'], name='route_regio_c_route_21cc44_partial', unique=True, where=b"status <> 'disabled'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AlterUniqueTogether(
            name='regiontyperule',
            unique_together=set([('c_route', 'region', 'type', 'provider_ratecard')]),
        ),
        migrations.AddIndex(
            model_name='regionrule',
            index=partial_index.PartialIndex(fields=[b'c_route', b'region', b'provider_ratecard'], name='route_regio_c_route_de1897_partial', unique=True, where=b"status <> 'disabled'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AlterUniqueTogether(
            name='regionrule',
            unique_together=set([('c_route', 'region', 'provider_ratecard')]),
        ),
        migrations.AddIndex(
            model_name='prefixrule',
            index=partial_index.PartialIndex(fields=[b'c_route', b'prefix', b'destnum_length', b'provider_ratecard'], name='route_prefi_c_route_6ca2d1_partial', unique=True, where=b"status <> 'disabled'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AlterUniqueTogether(
            name='prefixrule',
            unique_together=set([('c_route', 'prefix', 'destnum_length', 'provider_ratecard')]),
        ),
        migrations.AddIndex(
            model_name='destinationrule',
            index=partial_index.PartialIndex(fields=[b'c_route', b'destination', b'provider_ratecard'], name='route_desti_c_route_ca254d_partial', unique=True, where=b"status <> 'disabled'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AlterUniqueTogether(
            name='destinationrule',
            unique_together=set([('c_route', 'destination', 'provider_ratecard')]),
        ),
        migrations.AddIndex(
            model_name='defaultrule',
            index=partial_index.PartialIndex(fields=[b'c_route', b'provider_ratecard'], name='route_defau_c_route_963fa0_partial', unique=True, where=b"status <> 'disabled'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AlterUniqueTogether(
            name='defaultrule',
            unique_together=set([('c_route', 'provider_ratecard')]),
        ),
        migrations.AddIndex(
            model_name='countrytyperule',
            index=partial_index.PartialIndex(fields=[b'c_route', b'country', b'type', b'provider_ratecard'], name='route_count_c_route_6cf230_partial', unique=True, where=b"status <> 'disabled'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AlterUniqueTogether(
            name='countrytyperule',
            unique_together=set([('c_route', 'country', 'type', 'provider_ratecard')]),
        ),
        migrations.AddIndex(
            model_name='countryrule',
            index=partial_index.PartialIndex(fields=[b'c_route', b'country', b'provider_ratecard'], name='route_count_c_route_1daea7_partial', unique=True, where=b"status <> 'disabled'", where_postgresql=b'', where_sqlite=b''),
        ),
        migrations.AlterUniqueTogether(
            name='countryrule',
            unique_together=set([('c_route', 'country', 'provider_ratecard')]),
        ),
    ]
